%{
open ComSciModManAssTypesAST
%}

%token <float> NUM
%token <boolean> BOO
%token TIMES DIV PLUS MINUS POW LPAR RPAR EOF

%left PLUS MINUS
%left TIMES DIV
%right POW

%start start

%type <expr> start
%type <expr> expression

%%

start: expression EOF             { $1 }

expression:
  | expression TIMES expression   { TimesExpr($1,$3) }
  | expression DIV expression     { DivExpr($1,$3) }
  | expression PLUS expression    { PlusExpr($1,$3) }
  | expression MINUS expression   { MinusExpr($1,$3) }
  | expression POW expression     { PowExpr($1,$3) }
  | PLUS expression               { UPlusExpr($2) }
  | MINUS expression              { UMinusExpr($2) }
  | NUM                           { Num($1) }
  | LPAR expression RPAR          { $2 }




%type <b> start
%type <b> bool

start: bool EOF                     { $1 }

bool:
    | bool AND bool               { AndB($1, $2) }
    | bool OR bool                { OrB($1, $2) }
    | NOT bool                    { NotB($1) }
    | bool EQUAL bool             { EqualB($1, $2) }
    | bool NOTEQUAL bool          { NotEqualB($1, $2) }
    | bool GT bool                { GTB($1, $2) }
    | bool GTE bool               { GTB($1, $2) }
    | bool LT bool                { GTB($1, $2) }
    | bool LTE bool               { GTB($1, $2) }
    | BOO                         { BB($1) }


%%
